import turtle
turtle = turtle.Turtle()

def rect(x,y,a):
  turtle.up()
  turtle.home()
  turtle.forward(x)
  turtle.feft(90)
  turtle.down()
  for i in range(4):
    turtle.forward(a)
    turtle.left(-90)

関数：
複数の処理をひとまとめにしたもの
オブジェクト：
複数の性質と複数の関数をひとまとめにしたもの

num=12
random.randint(1,num)

import random

class Dice:
  face_num=6
  def shoot(self):
    return random.randint(1,self.face_num)
#空行    
 
 aDice=Dice()#クラスをもとにオブジェクトを作る
 aDice.shoot()#オブジェクトを使う
 
aDice.face_num=10000
aDice.shoot()

bDice=Dice()
bDice=shoot()

オブジェクト指向プログラミング
クラス：
オブジェクトの設計図
　・オブジェクト：データと操作をまとめたもの
クラス派生：
クラスをもとに、別のクラスを作ること、新しいクラスには、もとのクラスの性質を「継承する」     
  
for i in range(1000):
  print(i) 

標準出力：
画面に出力
標準入力：
キーボードから入力

import sys

for line in sys.stdin:
  print